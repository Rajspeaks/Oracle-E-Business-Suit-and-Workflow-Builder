--Create a Master Detail report to display BUSINESS GROUP Wise List of EMPLOYEES
--Table : PER_ALL_PEOPLE_F;
--Fields:
--PERSON_ID ,PERSON_TYPE_ID ,FIRST_NAME ,MIDDLE_NAMES ,LAST_NAME ,DATE_OF_BIRTH ,BUSINESS_GROUP_ID ,EMAIL_ADDRESS
--(Mumbai)

SELECT * FROM PER_ALL_PEOPLE_F;

SELECT PERSON_ID ,PERSON_TYPE_ID ,FIRST_NAME ,MIDDLE_NAMES ,LAST_NAME ,DATE_OF_BIRTH ,BUSINESS_GROUP_ID ,EMAIL_ADDRESS
FROM PER_ALL_PEOPLE_F WHERE PERSON_ID BETWEEN 400 AND 1700 ORDER BY BUSINESS_GROUP_ID;


CREATE OR REPLACE PROCEDURE XXCTS_RAJDEEP_PERSON
IS
CURSOR PER_CUR
IS
SELECT PERSON_ID ,PERSON_TYPE_ID ,FIRST_NAME ,MIDDLE_NAMES ,LAST_NAME ,DATE_OF_BIRTH ,BUSINESS_GROUP_ID ,EMAIL_ADDRESS
FROM PER_ALL_PEOPLE_F WHERE PERSON_ID BETWEEN 400 AND 1700 ORDER BY BUSINESS_GROUP_ID;

PER_REC PER_CUR%ROWTYPE;



BEGIN
OPEN PER_CUR;
DBMS_OUTPUT.PUT_LINE('<?xml version="1.0"?>');
DBMS_OUTPUT.PUT_LINE('<PersonRoot>');
LOOP

FETCH PER_CUR
INTO PER_REC;

EXIT WHEN PER_CUR%NOTFOUND;
DBMS_OUTPUT.PUT_LINE('<PERSON>');
DBMS_OUTPUT.PUT_line('<PERSON_ID>' || PER_REC.PERSON_ID || '</PERSON_ID>');
DBMS_OUTPUT.PUT_LINE('<PERSON_TYPE_ID>' || PER_REC.PERSON_TYPE_ID || '</PERSON_TYPE_ID>');
DBMS_OUTPUT.PUT_LINE('<FIRST_NAME>'|| PER_REC.FIRST_NAME || '</FIRST_NAME>');
DBMS_OUTPUT.PUT_LINE('<MIDDLE_NAMES>'|| PER_REC.MIDDLE_NAMES || '</MIDDLE_NAMES>');
DBMS_OUTPUT.PUT_LINE('<LAST_NAME>'|| PER_REC.LAST_NAME || '</LAST_NAME>');
DBMS_OUTPUT.PUT_LINE('<DATE_OF_BIRTH>'|| PER_REC.DATE_OF_BIRTH || '</DATE_OF_BIRTH>');
DBMS_OUTPUT.PUT_LINE('<BUSINESS_GROUP_ID>'|| PER_REC.BUSINESS_GROUP_ID || '</BUSINESS_GROUP_ID>');
DBMS_OUTPUT.PUT_LINE('<EMAIL_ADDRESS>'|| PER_REC.EMAIL_ADDRESS || '</EMAIL_ADDRESS>');
DBMS_OUTPUT.PUT_LINE('</PERSON>');
END LOOP;
DBMS_OUTPUT.PUT_LINE('</PersonRoot>');
CLOSE PER_CUR; 
END;



SELECT *
FROM USER_ERRORS
WHERE NAME =upper('XXCTS_RAJDEEP_PERSON');
exec XXCTS_RAJDEEP_PERSON;

-------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE XXCTS_RAJDEEP_PERSON(ERRBUF OUT VARCHAR2, RETCODE OUT
VARCHAR2)
IS
CURSOR PER_CUR
IS
SELECT PERSON_ID ,PERSON_TYPE_ID ,FIRST_NAME ,MIDDLE_NAMES ,LAST_NAME ,DATE_OF_BIRTH ,BUSINESS_GROUP_ID ,EMAIL_ADDRESS
FROM PER_ALL_PEOPLE_F WHERE PERSON_ID BETWEEN 400 AND 1700 ORDER BY BUSINESS_GROUP_ID;

PER_REC PER_CUR%ROWTYPE;

V_ERROR_CODE NUMBER;
V_ERR_MESSAGE VARCHAR2(200);

BEGIN
OPEN PER_CUR;
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<?xml version="1.0"?>');
FND_FILE.PUT_LINE(fnd_file.output,'<PersonRoot>');
LOOP

FETCH PER_CUR
INTO PER_REC;

EXIT WHEN PER_CUR%NOTFOUND;
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<PERSON>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<PERSON_ID>' || PER_REC.PERSON_ID || '</PERSON_ID>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<PERSON_TYPE_ID>' || PER_REC.PERSON_TYPE_ID || '</PERSON_TYPE_ID>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<FIRST_NAME>'|| PER_REC.FIRST_NAME || '</FIRST_NAME>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<MIDDLE_NAMES>'|| PER_REC.MIDDLE_NAMES || '</MIDDLE_NAMES>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<LAST_NAME>'|| PER_REC.LAST_NAME || '</LAST_NAME>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<DATE_OF_BIRTH>'|| PER_REC.DATE_OF_BIRTH || '</DATE_OF_BIRTH>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<BUSINESS_GROUP_ID>'|| PER_REC.BUSINESS_GROUP_ID || '</BUSINESS_GROUP_ID>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<EMAIL_ADDRESS>'|| PER_REC.EMAIL_ADDRESS || '</EMAIL_ADDRESS>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'</PERSON>');
END LOOP;
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'</PersonRoot>');
CLOSE PER_CUR; 
EXCEPTION

WHEN OTHERS THEN
V_ERROR_CODE := SQLCODE;

V_ERR_MESSAGE := SUBSTR(SQLERRM,1,200);
FND_FILE.PUT_LINE(FND_FILE.LOG, 'Error Code :' || V_ERROR_CODE);
FND_FILE.PUT_LINE(FND_FILE.LOG,'Error Message :' || V_ERR_MESSAGE);
end;




