--Create a Master Detail report to display VENDOR_type_LOOKUP_CODE Wise List of all Vendors
--
--Table : PO_Vendors
--
--Fields:
--
--VENDOR_ID , VENDOR_NAME ,SEGMENT1 ,VENDOR_type_LOOKUP_CODE ,PAYMENT_PRIORITY ,Party_number
--
--Apply conditional format to VENDOR_type_LOOKUP_CODE

SELECT * FROM PO_Vendors;

SELECT VENDOR_ID , VENDOR_NAME ,SEGMENT1 ,VENDOR_type_LOOKUP_CODE ,PAYMENT_PRIORITY ,Party_number 
FROM PO_VENDORS WHERE VENDOR_ID BETWEEN 1000 AND 5000 ORDER BY VENDOR_type_LOOKUP_CODE; 



CREATE OR REPLACE PROCEDURE XXCTS_RAJDEEP_VENDOR
IS
CURSOR VENDOR_CUR
IS
SELECT VENDOR_ID , VENDOR_NAME ,SEGMENT1 ,VENDOR_TYPE_LOOKUP_CODE ,PAYMENT_PRIORITY ,PARTY_NUMBER 
FROM PO_VENDORS WHERE VENDOR_ID BETWEEN 1000 AND 5000 ORDER BY VENDOR_TYPE_LOOKUP_CODE; 

VENDOR_REC VENDOR_CUR%ROWTYPE;

BEGIN
OPEN VENDOR_CUR;
DBMS_OUTPUT.PUT_LINE('<?xml version="1.0"?>');
DBMS_OUTPUT.PUT_LINE('<VendorRoot>');
LOOP

FETCH VENDOR_CUR
INTO VENDOR_REC;

EXIT WHEN VENDOR_CUR%NOTFOUND;
DBMS_OUTPUT.PUT_LINE('<VENDOR>');
DBMS_OUTPUT.PUT_line('<VENDOR_ID>' || VENDOR_REC.VENDOR_ID || '</VENDOR_ID>');
DBMS_OUTPUT.PUT_LINE('<VENDOR_NAME>' || VENDOR_REC.VENDOR_NAME || '</VENDOR_NAME>');
DBMS_OUTPUT.PUT_LINE('<SEGMENT1>'|| VENDOR_REC.SEGMENT1 || '</SEGMENT1>');
DBMS_OUTPUT.PUT_LINE('<VENDOR_TYPE_LOOKUP_CODE>'|| VENDOR_REC.VENDOR_TYPE_LOOKUP_CODE || '</VENDOR_TYPE_LOOKUP_CODE>');
DBMS_OUTPUT.PUT_LINE('<PAYMENT_PRIORITY>'|| VENDOR_REC.PAYMENT_PRIORITY || '</PAYMENT_PRIORITY>');
DBMS_OUTPUT.PUT_LINE('<PARTY_NUMBER>'|| VENDOR_REC.PARTY_NUMBER || '</PARTY_NUMBER>');
DBMS_OUTPUT.PUT_LINE('</VENDOR>');
END LOOP;
DBMS_OUTPUT.PUT_LINE('</VendorRoot>');
CLOSE VENDOR_CUR; 
END;



SELECT *
FROM USER_ERRORS
WHERE NAME =upper('XXCTS_RAJDEEP_VENDOR');
exec XXCTS_RAJDEEP_VENDOR;

-------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE XXCTS_RAJDEEP_VENDOR(ERRBUF OUT VARCHAR2, RETCODE OUT
VARCHAR2)
IS
  CURSOR VENDOR_CUR
IS
SELECT VENDOR_ID , VENDOR_NAME ,SEGMENT1 ,VENDOR_TYPE_LOOKUP_CODE ,PAYMENT_PRIORITY ,PARTY_NUMBER 
FROM PO_VENDORS WHERE VENDOR_ID BETWEEN 3000 and 7000; 

VENDOR_REC VENDOR_CUR%ROWTYPE;

V_ERROR_CODE NUMBER;
V_ERR_MESSAGE VARCHAR2(200);

BEGIN
OPEN VENDOR_CUR;
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<?xml version="1.0"?>');
FND_FILE.PUT_LINE(fnd_file.output,'<VendorRoot>');
LOOP

FETCH VENDOR_CUR
INTO VENDOR_REC;

EXIT WHEN VENDOR_CUR%NOTFOUND;
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<VENDOR>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<VENDOR_ID>' || VENDOR_REC.VENDOR_ID || '</VENDOR_ID>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<VENDOR_NAME>' || VENDOR_REC.VENDOR_NAME || '</VENDOR_NAME>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<SEGMENT1>'|| VENDOR_REC.SEGMENT1 || '</SEGMENT1>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<VENDOR_TYPE_LOOKUP_CODE>'|| VENDOR_REC.VENDOR_TYPE_LOOKUP_CODE || '</VENDOR_TYPE_LOOKUP_CODE>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<PAYMENT_PRIORITY>'|| VENDOR_REC.PAYMENT_PRIORITY || '</PAYMENT_PRIORITY>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'<PARTY_NUMBER>'|| VENDOR_REC.PARTY_NUMBER || '</PARTY_NUMBER>');
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'</VENDOR>');
END LOOP;
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'</VendorRoot>');
CLOSE VENDOR_CUR; 
EXCEPTION

WHEN OTHERS THEN
V_ERROR_CODE := SQLCODE;

V_ERR_MESSAGE := SUBSTR(SQLERRM,1,200);
FND_FILE.PUT_LINE(FND_FILE.LOG, 'Error Code :' || V_ERROR_CODE);
FND_FILE.PUT_LINE(FND_FILE.LOG,'Error Message :' || V_ERR_MESSAGE);
END;













